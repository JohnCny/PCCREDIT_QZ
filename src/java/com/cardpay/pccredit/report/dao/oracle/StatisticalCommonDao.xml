<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cardpay.pccredit.report.dao.StatisticalCommonDao">
	<resultMap id="ResultMap" type="com.cardpay.pccredit.report.model.NameValueRecord">
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="value" column="value" />
	</resultMap>
	
	<resultMap id="ResultMapTips" type="com.cardpay.pccredit.report.model.HomeTips">
		<result property="userId" column="userId" />
		<result property="userName" column="userName" />
		<result property="allCreditAmount" column="allCreditAmount" />
		<result property="usedCreditAmount" column="usedCreditAmount" />
		<result property="percent" column="percent" />
		
		<result property="clientName" column="clientName" />
		<result property="loanAmt" column="loanAmt" />
		<result property="expiryDate" column="expiryDate" />
	</resultMap>
	
	<select id="statisticalApplicationStatus" resultMap="ResultMap" >
		select t.name,
	       t.id,
	       (case
	         when t.id = 'return' then
	          t.value
	         else
	          count_num.value
	       end) value
	
	  from (select app_status.name, app_status.id, return_num.value
	          from (select '新增' as name, 'success' as id
	                  from dual
	                union all
	                select '审批中' as name, 'audit' as id
	                  from dual
	                union all
	                select '已审批' as name, 'approved' as id
	                  from dual
	                union all
	                select '退回' as name, 'returnedToFirst' as id
	                  from dual
	                union all
	                select '拒绝' as name, 'refuse' as id from dual) app_status
	          left join (select count(0) as value, 'return' as id
	                      from CUSTOMER_APPLICATION_INFO cai
	                     inner join CUSTOMER_APPLICATION_PROCESS cap
	                        on cai.id = cap.application_id
	                       and cap.process_op_status = 'RETURNAPPROVE') return_num
	            on return_num.id = app_status.id) t
	  left join (select count(0) as value, app_info.status as id
	               from customer_application_info app_info
	              group by app_info.status) count_num
	    on t.id = count_num.id
	</select>
	
	<select id="statisticalCreditStatus" resultMap="ResultMap" >
		select '正常' name, nvl(sum(t.principal_overdraft), 0)/10000 value
		  from AVERAGE_DAILY_OVERDRAFT t
		union all
		select '不良' name, nvl(sum(t.OVERDUE_BALANCE_IN), 0)/10000 value
		  from npls_information t
		union all
		select '逾期' name,
		       sum(case
		             when name = '逾期' then
		              a.value
		             else
		              -a.value
		           end)/10000 value
		  from (select '逾期' name, nvl(sum(t.CURRENT_BALANCE), 0) value
		          from customer_overdue t
		        union all
		        select '逾期' name, nvl(sum(t.OVERDUE_AMOUNT), 0) value
		          from customer_overdue_history t
		        union all
		        select '不良' name, nvl(sum(t.VERIFICATION_ACCOUNT), 0)
		          from npls_information t) a
	</select>
	
	<select id="statisticalCardStatus" resultMap="ResultMap" >
		select '核销卡' name, count(0) value
		  from CUSTOMER_ACCOUNT_INFORMATION t
		 where t.charge_logo = 1
		union all
		select '有效卡' name, count(0) value
		  from customer_card_information t
		 where t.year = to_char(sysdate, 'yyyy')
		   and t.month = to_char(sysdate, 'MM')
		   and t.effective_status = 1
		union all
		select '激活卡' name, count(0) value
		  from customer_card_information t
		 where t.year = to_char(sysdate, 'yyyy')
		   and t.month = to_char(sysdate, 'MM')
		   and t.activation_status = 1
	</select>
	
	<select id="getUsedCreditByUserId" resultMap="ResultMapTips" >
	with 
    circle as 
      (
        select CIRCLE.*,CAI.PRODUCT_ID,bci.user_id as manager_id,pa.product_name from CUSTOMER_APPLICATION_INFO cai 
        left join QZ_IESB_FOR_CIRCLE circle on CAI.id = CIRCLE.APPLICATION_ID
        left join BASIC_CUSTOMER_INFORMATION bci on cai.customer_id = bci.id
        left join product_attribute pa on CAI.PRODUCT_ID = pa.id
        where CAI.STATUS = 'approved'
      ),
    loan as 
      (
        select sum(CIRCLE.CONTRACT_AMT) as allCreditAmount,sum(loan.loan_balance) as usedCreditAmount,max(circle.manager_id) as manager_id,circle.customer_id
        from circle 
        left join 
        (select sum(loan_balance) as loan_balance,cont_no from O_CLPM_ACC_LOAN 
        where prd_id in ('100084','100085') and ACC_STATUS = '1' group by cont_no)loan 
        on circle.ret_contno = loan.cont_no
        group by circle.customer_id
      )

    select nvl(allCreditAmount,0) as allCreditAmount,nvl(usedCreditAmount,0)as usedCreditAmount,
      decode(usedCreditAmount,null,0,CAST (usedCreditAmount*100/loan.allCreditAmount as decimal (10,2))) as percent,
      loan.manager_id as userId,su.display_name as userName,
      bci.chinese_name as clientName
    from 
      loan 
      left join sys_user su on su.id = loan.manager_id
      left join basic_customer_information bci on loan.customer_id = bci.id
    where 1=1
    	<if test="userIds != null">
			and loan.manager_id in
          	<foreach item="item" index="index" collection="userIds" open="(" separator="," close=")">
                  #{item}
          	</foreach> 
        </if>
	</select>
	
	<select id="getExpiryClientNum" resultMap="ResultMapTips" >
		with 
		circle as 
	      (
	        select CIRCLE.*,CAI.PRODUCT_ID,bci.user_id as manager_id,pa.product_name from CUSTOMER_APPLICATION_INFO cai 
	        left join QZ_IESB_FOR_CIRCLE circle on CAI.id = CIRCLE.APPLICATION_ID
	        left join BASIC_CUSTOMER_INFORMATION bci on cai.customer_id = bci.id
	        left join product_attribute pa on CAI.PRODUCT_ID = pa.id
	        where CAI.STATUS = 'approved'
	      )
      
		select circle.client_name as clientName,loan.end_date as expiryDate,loan.loan_amt as loanAmt
		from o_clpm_acc_loan loan
		left join circle on loan.cus_id = circle.client_no
		where 
		loan.prd_id in ('100084','100085')
		and loan.acc_status = '1'
		<if test="userIds != null">
 		    		and circle.manager_id in
                	<foreach item="item" index="index" collection="userIds" open="(" separator="," close=")">
                        #{item}
                	</foreach> 
                </if>
		and to_date(to_char(sysdate,'yyyy-MM-dd'),'yyyy-MM-dd') <![CDATA[ > ]]> to_date(loan.end_date,'yyyy-MM-dd')-14
		and to_date(to_char(sysdate,'yyyy-MM-dd'),'yyyy-MM-dd') <![CDATA[ <= ]]> to_date(loan.end_date,'yyyy-MM-dd')
	</select>
	
	<select id="getAlreadyExpiryClientNum" resultMap="ResultMapTips" >
		with 
		circle as 
	      (
	        select CIRCLE.*,CAI.PRODUCT_ID,bci.user_id as manager_id,pa.product_name from CUSTOMER_APPLICATION_INFO cai 
	        left join QZ_IESB_FOR_CIRCLE circle on CAI.id = CIRCLE.APPLICATION_ID
	        left join BASIC_CUSTOMER_INFORMATION bci on cai.customer_id = bci.id
	        left join product_attribute pa on CAI.PRODUCT_ID = pa.id
	        where CAI.STATUS = 'approved'
	      )
      
		select circle.client_name as clientName,loan.end_date as expiryDate,loan.loan_amt as loanAmt
		from o_clpm_acc_loan loan
		left join circle on loan.cus_id = circle.client_no
		where 
		loan.prd_id in ('100084','100085')
		and loan.acc_status = '1'
		<if test="userIds != null">
   		and circle.manager_id in
            	<foreach item="item" index="index" collection="userIds" open="(" separator="," close=")">
                    #{item}
            	</foreach> 
            </if>
		and to_date(to_char(sysdate,'yyyy-MM-dd'),'yyyy-MM-dd') <![CDATA[ > ]]> to_date(loan.end_date,'yyyy-MM-dd')
	</select>
</mapper>